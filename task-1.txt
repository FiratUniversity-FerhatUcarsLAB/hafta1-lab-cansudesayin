Öğrenci No:250541096
AD-SOYAD:Cansude Sayın
seçtiğim algoritma "Optimum Bütçeli market alışverişi algoritması" bu ödevi ChatGpt'den yararlanarak yaptım.
Lütfen seçtiğiniz algoritmaya ait çözümü ve diğer isterleri aşağıya ekleyiniz:
ChatGpt'ye sorduğum soru; "Optimum Bütçeli market alışverişi algoritması için adım adım algoritma geliştirmek istiyorum. Koşullu durumları ve tekrar eden işlemleri de içeren detaylı bir pseudocode yazmama yardım eder misin?"
ChatGpt'nin buna cevabı:
Harika fikir 🌱 “Optimum bütçeli market alışverişi algoritması” hem koşullu durumlar (if-else) hem de tekrar eden işlemler (döngüler) içermeye çok uygun bir senaryo.
Aşağıda sana adım adım açıklamalı şekilde ilerleyen ve sonunda tam bir pseudocode örneği vereceğim.

🎯 Amaç

Kullanıcının belirlediği bütçe içinde gereksinim önceliğine göre en uygun ürünleri satın almak.

🧩 1. Algoritmanın Temel Mantığı
Veri Girişi:
-Bütçe girilir (butce)
-Alışveriş listesi oluşturulur (ürün adı, fiyatı, önceliği)
Listeyi Önceliğe Göre Sırala:
-Öncelik değeri yüksek olan ürünler önce değerlendirilir.
Ürünleri Bütçe Sınırında Sepete Ekle:
-Her ürün için fiyat bütçeyi aşıyorsa alınmaz.
-Bütçe yeterliyse sepete eklenir ve bütçeden düşülür.
Fiyat Aşımı Kontrolü:
-Eğer ürün alınamıyorsa, daha ucuz bir alternatif var mı kontrol edilir.
-Yoksa ürün atlanır.
Sonuç Gösterimi:
-Alınan ürünlerin listesi
-Kalan bütçe miktarı


2. Koşullar ve Döngülerle Pseudocode
ALGORITMA OptimumButceliMarketAlisverisi

BAŞLA

    // 1. Girdiler
    YAZ "Toplam bütçenizi girin:"
    OKU butce

    YAZ "Kaç ürün almak istiyorsunuz?"
    OKU urun_sayisi

    BOS liste <- []

    // 2. Ürün bilgilerini al
    İÇİN i <- 1 TO urun_sayisi YAP
        YAZ "Ürün adı:"
        OKU ad
        YAZ "Fiyat:"
        OKU fiyat
        YAZ "Öncelik (1-5 arası, 5 = en önemli):"
        OKU oncelik

        listeyeEkle(liste, {ad, fiyat, oncelik})
    SON İÇİN

    // 3. Ürünleri önceliğe göre sırala (5'ten 1'e)
    liste <- sirala(liste, "oncelik", AZALAN)

    // 4. Sepet ve kalan bütçe başlat
    sepet <- []
    kalan_butce <- butce

    // 5. Her ürünü sırayla değerlendir
    İÇİN urun IN liste YAP
        
        EĞER urun.fiyat <= kalan_butce İSE
            sepetEkle(sepet, urun)
            kalan_butce <- kalan_butce - urun.fiyat
        DEĞİLSE
            YAZ urun.ad, " için bütçe yetersiz."
            YAZ "Daha ucuz bir alternatif var mı? (E/H)"
            OKU cevap

            EĞER cevap = "E" İSE
                YAZ "Alternatif ürün fiyatını girin:"
                OKU yeni_fiyat

                EĞER yeni_fiyat <= kalan_butce İSE
                    sepetEkle(sepet, {urun.ad, yeni_fiyat, urun.oncelik})
                    kalan_butce <- kalan_butce - yeni_fiyat
                DEĞİLSE
                    YAZ "Alternatif de bütçeyi aşıyor, ürün atlanıyor."
                SON EĞER
            SON EĞER
        SON EĞER
    SON İÇİN

    // 6. Sonuçları yazdır
    YAZ "--------------------------"
    YAZ "Alınan ürünler:"
    İÇİN urun IN sepet YAP
        YAZ urun.ad, " - ", urun.fiyat, " TL"
    SON İÇİN

    YAZ "Kalan bütçe: ", kalan_butce, " TL"
    YAZ "--------------------------"

BİTİR

SON ALGORITMA

burada verdiği cevaptan memmnun kaldığım için daha fazla bir işlem yaptırmadım sadece eklemeyi unuttuğu başla ve bitir kısmını ekledim.
